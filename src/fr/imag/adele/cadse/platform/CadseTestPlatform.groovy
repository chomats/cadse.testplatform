package fr.imag.adele.cadse.platform;import java.util.jar.Manifestimport java.util.Localeimport java.text.SimpleDateFormatimport java.lang.Systemimport java.io.File;import java.io.FileInputStreamimport java.util.Propertiesimport groovy.util.AntBuilderimport org.osgi.framework.Versionimport org.junit.Assertimport java.lang.Longimport java.lang.Booleanimport groovy.lang.Closureimport java.lang.NullPointerExceptionimport java.lang.Throwableimport java.lang.Throwableimport junit.framework.TestFailureimport org.eclipse.ui.internal.misc.TestPartListenerimport org.eclipse.jdt.internal.junit.model.ITestRunListener2;import org.eclipse.jdt.internal.junit.model.RemoteTestRunnerClient;

public class CadseTestPlatform {

	String testPlatformPath	String wsTest
	String testEclipsePath	String testReport
	AntBuilder ant
	boolean debugFlag = false	String _buildNumber = null	final String defaultTimezone = 'GMT+2'	int testPassed = 0	int testFailed = 0	int testCount  = 0			final long startTime = System.currentTimeMillis();		CadseTest[] cadseTests ;	CadseTestCollector cadseCollector = new CadseTestCollector()	BuildManager buildManager;	public CadseTestPlatform() {		ant =  new AntBuilder();		// load properties ...		File f = null;		f = new File(ant.project.properties.basedir, "test.properties");		if (f.exists()) {			ant.property(file:f);		}		f = new File(ant.project.properties.get("user.home"), ".cadse_test.properties")		if (f.exists()) {			ant.property(file:f);		}		f = new File(ant.project.properties.basedir, "cadse_test.properties");		if (f.exists()) {			ant.property(file:f);		}				testPlatformPath = ant.project.properties.testPlatformPath		testReport ="${testPlatformPath}/report"		testEclipsePath  = "$testPlatformPath/eclipse"				System.out.println("********************************************************");		System.out.println("* base dir : ${ant.project.properties.basedir}");		System.out.println("* test Platform Path : ${testPlatformPath}");		System.out.println("* test report Path   : ${testReport}");		System.out.println("* test eclipse Path  : ${testEclipsePath}");		System.out.println("********************************************************");		System.out.println("");		buildManager = new BuildManager(ant, testPlatformPath)		wsTest = ant.project.properties.wsTest	}	public void addBundle(BundleBuildDescription b) {		for(findB in buildManager.bundlestoCompile) {			if (findB.equals(b)) return;		}		buildManager.bundlestoCompile.add( b);	}	public void addBundle(String path, String name, String defaultSource) {		addBundle(new BundleBuildDescription(path, name, defaultSource));	}		/** true if failed */	public boolean compileAll() {		for(b in buildManager.bundlestoCompile) {			if (buildManager.createBundle(b.path, b.name, b.defaultSource))				return true;		}		return false;	}//	/** true if failed *///	boolean runJavaTest(String testProperties, String testName, String testPluginName, String classname) {//		return runJavaTest(testProperties, testName, testPluginName, classname, null);//	}////	/** true if failed *///	boolean runJavaTest(String testProperties, String testName, String testPluginName, String classname, Closure c) {//		//		/* Test preparation *///		long startTime = System.currentTimeMillis();//		messageStartTestSuite(testName);		//		//		/* Test running *///		boolean retval = new RunJavaTestClass(this, testProperties, testName,testPluginName, classname).run(c);//		//		/* Test statistics *///		ts_name.add(testName)//		ts_result.add(retval)//		ts_duration.add(System.currentTimeMillis()-startTime)//		messageTestSuiteResults()//		//		return retval//	}	/** true if failed */	public boolean run(CadseTestPart tp) {		for(b in tp.bundlestoDelete)			buildManager.deleteBundle(b);		buildManager.bundlestoCompile = tp.bundlestoCompile;		if (compileAll()) {			showResult();			return true;		}				/* Test preparation */		long startTime = System.currentTimeMillis();		messageStartTestSuite(tp.testName);						/* Test running */		boolean retval = new RunJavaTestClass(this, tp).run(tp.c);				/* Test statistics */		tp.timestamp = System.currentTimeMillis()-startTime		tp.status = retval? 0 : 1;		messageTestSuiteResults()		return retval	}			/** true if failed */	public boolean runTests(CadseTest... cadseTest) {		this.cadseTests = cadseTest;				this.testCount = cadseTest.length;		for(ct in cadseTest) {			ct.setCadseTestPlatform(this);		}		for(ct in cadseTest) {			ct.init();		}		if (compileAll()) {			showResult();			return true;		}		for(ct in cadseTest) {			try {				if (!ct.runTest()) {					this.testPassed++;				} else {					this.testFailed++;				}			} catch(Throwable e) {				e.printStackTrace()				this.testFailed++;			}		}		return testPassed != testCount;	}		private void messageStartTestSuite(String testName) {		System.out.println("");		System.out.println("********************************************************");		System.out.println("* Starting Test Suite : " + testName);		System.out.println("********************************************************");		System.out.println("");	}		private String toStringTime(long t) {		t /= 1000 // seconds		long minutes = t / 60		long seconds = t % 60				return "${minutes} min ${seconds} seconds.";	}			private void messageTestSuiteResults() {		long duration = System.currentTimeMillis() - startTime;		String generalFlag = "[SUCCESS]";				System.out.println("");		System.out.println("********************************************************");		System.out.println("* TEST RESULTS");		System.out.println("********************************************************");		System.out.println("*");			for (CadseTest ct : cadseTests) {						if (ct.status == 1) {				System.out.println("* [ ERROR ] " + ct.getName()+ " (" + toStringTime(ct.timestamp) + " )");				generalFlag = "[ ERROR ]"				for (CadseTestPart tp : ct.parts) {					if (tp.status == 1) {						System.out.println("*     [ ERROR ] " + tp.getName()+ " (" + toStringTime(tp.timestamp) + " )");						for (CadseTestMethod tm : tp.tests) {							if (tm.status == 1) {								System.out.println("*         [ ERROR ] " + tm.name);							}else								System.out.println("*         [SUCCESS] " + tm.name);						}					}					else						System.out.println("*     [SUCCESS] " + tp.getName()+ " (" + toStringTime(tp.timestamp) + " )");				}			}			else				System.out.println("* [SUCCESS] " + ct.getName()+ " (" + toStringTime(ct.timestamp) + " )");		}		System.out.println("*");		println("* " + generalFlag + " TOTAL : " + toStringTime(duration));		System.out.println("*");		System.out.println("********************************************************");		System.out.println("");	}
}